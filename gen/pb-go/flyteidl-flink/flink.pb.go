// Code generated by protoc-gen-go. DO NOT EDIT.
// source: flyteidl-flink/flink.proto

package flyteidl_flink

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	resource "k8s.io/apimachinery/pkg/api/resource"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Resource_PersistentVolume_Type int32

const (
	Resource_PersistentVolume_PD_STANDARD Resource_PersistentVolume_Type = 0
	Resource_PersistentVolume_PD_SSD      Resource_PersistentVolume_Type = 1
)

var Resource_PersistentVolume_Type_name = map[int32]string{
	0: "PD_STANDARD",
	1: "PD_SSD",
}

var Resource_PersistentVolume_Type_value = map[string]int32{
	"PD_STANDARD": 0,
	"PD_SSD":      1,
}

func (x Resource_PersistentVolume_Type) String() string {
	return proto.EnumName(Resource_PersistentVolume_Type_name, int32(x))
}

func (Resource_PersistentVolume_Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_13f39d29671649d9, []int{0, 0, 0}
}

type Resource struct {
	Cpu                  *resource.Quantity         `protobuf:"bytes,1,opt,name=cpu,proto3" json:"cpu,omitempty"`
	Memory               *resource.Quantity         `protobuf:"bytes,2,opt,name=memory,proto3" json:"memory,omitempty"`
	PersistentVolume     *Resource_PersistentVolume `protobuf:"bytes,3,opt,name=persistentVolume,proto3" json:"persistentVolume,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *Resource) Reset()         { *m = Resource{} }
func (m *Resource) String() string { return proto.CompactTextString(m) }
func (*Resource) ProtoMessage()    {}
func (*Resource) Descriptor() ([]byte, []int) {
	return fileDescriptor_13f39d29671649d9, []int{0}
}

func (m *Resource) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Resource.Unmarshal(m, b)
}
func (m *Resource) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Resource.Marshal(b, m, deterministic)
}
func (m *Resource) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Resource.Merge(m, src)
}
func (m *Resource) XXX_Size() int {
	return xxx_messageInfo_Resource.Size(m)
}
func (m *Resource) XXX_DiscardUnknown() {
	xxx_messageInfo_Resource.DiscardUnknown(m)
}

var xxx_messageInfo_Resource proto.InternalMessageInfo

func (m *Resource) GetCpu() *resource.Quantity {
	if m != nil {
		return m.Cpu
	}
	return nil
}

func (m *Resource) GetMemory() *resource.Quantity {
	if m != nil {
		return m.Memory
	}
	return nil
}

func (m *Resource) GetPersistentVolume() *Resource_PersistentVolume {
	if m != nil {
		return m.PersistentVolume
	}
	return nil
}

type Resource_PersistentVolume struct {
	Type                 Resource_PersistentVolume_Type `protobuf:"varint,1,opt,name=type,proto3,enum=flyteidl_flink.Resource_PersistentVolume_Type" json:"type,omitempty"`
	Size                 *resource.Quantity             `protobuf:"bytes,2,opt,name=size,proto3" json:"size,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                       `json:"-"`
	XXX_unrecognized     []byte                         `json:"-"`
	XXX_sizecache        int32                          `json:"-"`
}

func (m *Resource_PersistentVolume) Reset()         { *m = Resource_PersistentVolume{} }
func (m *Resource_PersistentVolume) String() string { return proto.CompactTextString(m) }
func (*Resource_PersistentVolume) ProtoMessage()    {}
func (*Resource_PersistentVolume) Descriptor() ([]byte, []int) {
	return fileDescriptor_13f39d29671649d9, []int{0, 0}
}

func (m *Resource_PersistentVolume) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Resource_PersistentVolume.Unmarshal(m, b)
}
func (m *Resource_PersistentVolume) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Resource_PersistentVolume.Marshal(b, m, deterministic)
}
func (m *Resource_PersistentVolume) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Resource_PersistentVolume.Merge(m, src)
}
func (m *Resource_PersistentVolume) XXX_Size() int {
	return xxx_messageInfo_Resource_PersistentVolume.Size(m)
}
func (m *Resource_PersistentVolume) XXX_DiscardUnknown() {
	xxx_messageInfo_Resource_PersistentVolume.DiscardUnknown(m)
}

var xxx_messageInfo_Resource_PersistentVolume proto.InternalMessageInfo

func (m *Resource_PersistentVolume) GetType() Resource_PersistentVolume_Type {
	if m != nil {
		return m.Type
	}
	return Resource_PersistentVolume_PD_STANDARD
}

func (m *Resource_PersistentVolume) GetSize() *resource.Quantity {
	if m != nil {
		return m.Size
	}
	return nil
}

type JobManager struct {
	Resource             *Resource `protobuf:"bytes,1,opt,name=resource,proto3" json:"resource,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *JobManager) Reset()         { *m = JobManager{} }
func (m *JobManager) String() string { return proto.CompactTextString(m) }
func (*JobManager) ProtoMessage()    {}
func (*JobManager) Descriptor() ([]byte, []int) {
	return fileDescriptor_13f39d29671649d9, []int{1}
}

func (m *JobManager) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JobManager.Unmarshal(m, b)
}
func (m *JobManager) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JobManager.Marshal(b, m, deterministic)
}
func (m *JobManager) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JobManager.Merge(m, src)
}
func (m *JobManager) XXX_Size() int {
	return xxx_messageInfo_JobManager.Size(m)
}
func (m *JobManager) XXX_DiscardUnknown() {
	xxx_messageInfo_JobManager.DiscardUnknown(m)
}

var xxx_messageInfo_JobManager proto.InternalMessageInfo

func (m *JobManager) GetResource() *Resource {
	if m != nil {
		return m.Resource
	}
	return nil
}

type TaskManager struct {
	Resource             *Resource `protobuf:"bytes,1,opt,name=resource,proto3" json:"resource,omitempty"`
	Replicas             int32     `protobuf:"varint,2,opt,name=replicas,proto3" json:"replicas,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *TaskManager) Reset()         { *m = TaskManager{} }
func (m *TaskManager) String() string { return proto.CompactTextString(m) }
func (*TaskManager) ProtoMessage()    {}
func (*TaskManager) Descriptor() ([]byte, []int) {
	return fileDescriptor_13f39d29671649d9, []int{2}
}

func (m *TaskManager) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TaskManager.Unmarshal(m, b)
}
func (m *TaskManager) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TaskManager.Marshal(b, m, deterministic)
}
func (m *TaskManager) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TaskManager.Merge(m, src)
}
func (m *TaskManager) XXX_Size() int {
	return xxx_messageInfo_TaskManager.Size(m)
}
func (m *TaskManager) XXX_DiscardUnknown() {
	xxx_messageInfo_TaskManager.DiscardUnknown(m)
}

var xxx_messageInfo_TaskManager proto.InternalMessageInfo

func (m *TaskManager) GetResource() *Resource {
	if m != nil {
		return m.Resource
	}
	return nil
}

func (m *TaskManager) GetReplicas() int32 {
	if m != nil {
		return m.Replicas
	}
	return 0
}

// Custom Proto for Flink Plugin.
type FlinkJob struct {
	JarFile              string            `protobuf:"bytes,1,opt,name=jarFile,proto3" json:"jarFile,omitempty"`
	MainClass            string            `protobuf:"bytes,2,opt,name=mainClass,proto3" json:"mainClass,omitempty"`
	Args                 []string          `protobuf:"bytes,3,rep,name=args,proto3" json:"args,omitempty"`
	FlinkProperties      map[string]string `protobuf:"bytes,4,rep,name=flinkProperties,proto3" json:"flinkProperties,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	JobManager           *JobManager       `protobuf:"bytes,5,opt,name=jobManager,proto3" json:"jobManager,omitempty"`
	TaskManager          *TaskManager      `protobuf:"bytes,6,opt,name=taskManager,proto3" json:"taskManager,omitempty"`
	ServiceAccount       string            `protobuf:"bytes,7,opt,name=serviceAccount,proto3" json:"serviceAccount,omitempty"`
	Image                string            `protobuf:"bytes,8,opt,name=image,proto3" json:"image,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *FlinkJob) Reset()         { *m = FlinkJob{} }
func (m *FlinkJob) String() string { return proto.CompactTextString(m) }
func (*FlinkJob) ProtoMessage()    {}
func (*FlinkJob) Descriptor() ([]byte, []int) {
	return fileDescriptor_13f39d29671649d9, []int{3}
}

func (m *FlinkJob) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FlinkJob.Unmarshal(m, b)
}
func (m *FlinkJob) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FlinkJob.Marshal(b, m, deterministic)
}
func (m *FlinkJob) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FlinkJob.Merge(m, src)
}
func (m *FlinkJob) XXX_Size() int {
	return xxx_messageInfo_FlinkJob.Size(m)
}
func (m *FlinkJob) XXX_DiscardUnknown() {
	xxx_messageInfo_FlinkJob.DiscardUnknown(m)
}

var xxx_messageInfo_FlinkJob proto.InternalMessageInfo

func (m *FlinkJob) GetJarFile() string {
	if m != nil {
		return m.JarFile
	}
	return ""
}

func (m *FlinkJob) GetMainClass() string {
	if m != nil {
		return m.MainClass
	}
	return ""
}

func (m *FlinkJob) GetArgs() []string {
	if m != nil {
		return m.Args
	}
	return nil
}

func (m *FlinkJob) GetFlinkProperties() map[string]string {
	if m != nil {
		return m.FlinkProperties
	}
	return nil
}

func (m *FlinkJob) GetJobManager() *JobManager {
	if m != nil {
		return m.JobManager
	}
	return nil
}

func (m *FlinkJob) GetTaskManager() *TaskManager {
	if m != nil {
		return m.TaskManager
	}
	return nil
}

func (m *FlinkJob) GetServiceAccount() string {
	if m != nil {
		return m.ServiceAccount
	}
	return ""
}

func (m *FlinkJob) GetImage() string {
	if m != nil {
		return m.Image
	}
	return ""
}

func init() {
	proto.RegisterEnum("flyteidl_flink.Resource_PersistentVolume_Type", Resource_PersistentVolume_Type_name, Resource_PersistentVolume_Type_value)
	proto.RegisterType((*Resource)(nil), "flyteidl_flink.Resource")
	proto.RegisterType((*Resource_PersistentVolume)(nil), "flyteidl_flink.Resource.PersistentVolume")
	proto.RegisterType((*JobManager)(nil), "flyteidl_flink.JobManager")
	proto.RegisterType((*TaskManager)(nil), "flyteidl_flink.TaskManager")
	proto.RegisterType((*FlinkJob)(nil), "flyteidl_flink.FlinkJob")
	proto.RegisterMapType((map[string]string)(nil), "flyteidl_flink.FlinkJob.FlinkPropertiesEntry")
}

func init() { proto.RegisterFile("flyteidl-flink/flink.proto", fileDescriptor_13f39d29671649d9) }

var fileDescriptor_13f39d29671649d9 = []byte{
	// 553 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x94, 0x5d, 0x4b, 0x1b, 0x4d,
	0x14, 0xc7, 0x9f, 0xb8, 0x31, 0x26, 0x27, 0xa0, 0x61, 0xf0, 0x62, 0xd9, 0xa7, 0x17, 0x92, 0x42,
	0xb1, 0x17, 0x99, 0x05, 0xeb, 0x85, 0x08, 0x85, 0x26, 0xa6, 0x5e, 0x08, 0x2d, 0x76, 0xb4, 0x2d,
	0xf4, 0x46, 0x26, 0xeb, 0x71, 0x1d, 0xf7, 0x65, 0x86, 0x99, 0x59, 0x61, 0xfb, 0x99, 0xda, 0xcf,
	0xd0, 0xaf, 0x56, 0x76, 0x36, 0x6b, 0xe2, 0xb6, 0x85, 0x62, 0x6f, 0xc2, 0x9c, 0x97, 0xff, 0x2f,
	0xe7, 0xfc, 0x17, 0x0e, 0x04, 0x37, 0x69, 0x69, 0x51, 0x5c, 0xa7, 0x93, 0x9b, 0x54, 0xe4, 0x49,
	0xe8, 0x7e, 0xa9, 0xd2, 0xd2, 0x4a, 0xb2, 0xdd, 0xd4, 0xae, 0x5c, 0x36, 0x38, 0x4c, 0x8e, 0x0c,
	0x15, 0x32, 0xe4, 0x4a, 0x64, 0x3c, 0xba, 0x15, 0x39, 0xea, 0x32, 0x54, 0x49, 0x5c, 0x25, 0x42,
	0x8d, 0x46, 0x16, 0x3a, 0xc2, 0x30, 0xc6, 0x1c, 0x35, 0xb7, 0x78, 0x5d, 0x53, 0xc6, 0xdf, 0x3d,
	0xe8, 0xb3, 0x65, 0x91, 0xbc, 0x01, 0x2f, 0x52, 0x85, 0xdf, 0xd9, 0xeb, 0xec, 0x0f, 0x0f, 0x28,
	0xad, 0x81, 0x74, 0x1d, 0x48, 0x55, 0x12, 0x57, 0x09, 0xda, 0x00, 0xe9, 0x87, 0x82, 0xe7, 0x56,
	0xd8, 0x92, 0x55, 0x52, 0x72, 0x0a, 0xbd, 0x0c, 0x33, 0xa9, 0x4b, 0x7f, 0xe3, 0x49, 0x90, 0xa5,
	0x9a, 0x7c, 0x84, 0x91, 0x42, 0x6d, 0x84, 0xb1, 0x98, 0xdb, 0x4f, 0x32, 0x2d, 0x32, 0xf4, 0x3d,
	0x47, 0x7c, 0x49, 0x1f, 0xef, 0x4d, 0x9b, 0xe9, 0xe9, 0x79, 0x4b, 0xc0, 0x7e, 0x41, 0x04, 0x3f,
	0x3a, 0x30, 0x6a, 0xb7, 0x91, 0x19, 0x74, 0x6d, 0xa9, 0xd0, 0xad, 0xbd, 0x7d, 0x40, 0xff, 0x9a,
	0x4f, 0x2f, 0x4b, 0x85, 0xcc, 0x69, 0x2b, 0x86, 0x11, 0x5f, 0xf1, 0x89, 0x5b, 0x3b, 0xed, 0xf8,
	0x39, 0x74, 0x2b, 0x22, 0xd9, 0x81, 0xe1, 0xf9, 0xfc, 0xea, 0xe2, 0x72, 0xfa, 0x7e, 0x3e, 0x65,
	0xf3, 0xd1, 0x7f, 0x04, 0xa0, 0x57, 0x25, 0x2e, 0xe6, 0xa3, 0xce, 0x78, 0x06, 0x70, 0x26, 0x17,
	0xef, 0x78, 0xce, 0x63, 0xd4, 0xe4, 0x10, 0xfa, 0x0d, 0x6d, 0xf9, 0xd5, 0xfc, 0x3f, 0x8d, 0xcf,
	0x1e, 0x3a, 0xc7, 0x57, 0x30, 0xbc, 0xe4, 0x26, 0xf9, 0x27, 0x08, 0x09, 0x2a, 0x95, 0x4a, 0x45,
	0xc4, 0x8d, 0xdb, 0x7a, 0x93, 0x3d, 0xc4, 0xe3, 0x6f, 0x1e, 0xf4, 0x4f, 0x2b, 0xe1, 0x99, 0x5c,
	0x10, 0x1f, 0xb6, 0xee, 0xb8, 0x3e, 0x15, 0x69, 0x4d, 0x1f, 0xb0, 0x26, 0x24, 0xcf, 0x60, 0x90,
	0x71, 0x91, 0x9f, 0xa4, 0xdc, 0xd4, 0x8c, 0x01, 0x5b, 0x25, 0x08, 0x81, 0x2e, 0xd7, 0xb1, 0xf1,
	0xbd, 0x3d, 0x6f, 0x7f, 0xc0, 0xdc, 0x9b, 0x7c, 0x86, 0x1d, 0x37, 0xd0, 0xb9, 0x96, 0x0a, 0xb5,
	0x15, 0x68, 0xfc, 0xee, 0x9e, 0xb7, 0x3f, 0x3c, 0x98, 0xb4, 0x27, 0x6e, 0xfe, 0xbe, 0x7e, 0xac,
	0xfa, 0xdf, 0xe6, 0x56, 0x97, 0xac, 0x4d, 0x21, 0xc7, 0x00, 0x77, 0x0f, 0xb6, 0xfa, 0x9b, 0xce,
	0x85, 0xa0, 0xcd, 0x5c, 0x19, 0xcf, 0xd6, 0xba, 0xc9, 0x6b, 0x18, 0xda, 0x95, 0x9d, 0x7e, 0xcf,
	0x89, 0xff, 0x6f, 0x8b, 0xd7, 0x1c, 0x67, 0xeb, 0xfd, 0xe4, 0x05, 0x6c, 0x1b, 0xd4, 0xf7, 0x22,
	0xc2, 0x69, 0x14, 0xc9, 0x22, 0xb7, 0xfe, 0x96, 0xb3, 0xa2, 0x95, 0x25, 0xbb, 0xb0, 0x29, 0x32,
	0x1e, 0xa3, 0xdf, 0x77, 0xe5, 0x3a, 0x08, 0x66, 0xb0, 0xfb, 0xbb, 0x0d, 0xc9, 0x08, 0xbc, 0x04,
	0xcb, 0xa5, 0xe3, 0xd5, 0xb3, 0xd2, 0xdf, 0xf3, 0xb4, 0xc0, 0xa5, 0xd3, 0x75, 0x70, 0xbc, 0x71,
	0xd4, 0x99, 0x9d, 0x7c, 0x99, 0xc6, 0xb7, 0x48, 0x8d, 0x92, 0x56, 0xdc, 0x94, 0x34, 0x47, 0x1b,
	0x36, 0xe7, 0xa6, 0xb4, 0x58, 0x9f, 0x9e, 0x89, 0x4a, 0x8b, 0x58, 0xe4, 0xd5, 0xfd, 0x08, 0xd5,
	0x62, 0x12, 0xcb, 0xf0, 0xf1, 0x69, 0x5a, 0xf4, 0xdc, 0x3d, 0x79, 0xf5, 0x33, 0x00, 0x00, 0xff,
	0xff, 0x12, 0x5c, 0xf3, 0xd2, 0xb3, 0x04, 0x00, 0x00,
}
